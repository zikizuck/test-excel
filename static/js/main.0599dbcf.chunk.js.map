{"version":3,"sources":["CallApi/Post/Post.js","CallApi/CallApi.js","models/post.model.js","CallApi/Header/Header.js","CreatePost/CreatePost.js","Parts/Parts.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","clickHandler","e","console","log","target","value","setState","description","prompt","state","cls","this","QTY","qty","cls2","stock5","bgClass","className","index","src","thumbnailUrl","alt","onClick","window","open","thumbnailUrl2","num","OEM","make","engine","dir","desOK","locationOK","icon","faShekelSign","style","color","price","faSearchLocation","FirstFloor","stock1","secFloor","stock2","Component","CallApi","onDebounce","debounce","search","toUpperCase","onChange","persist","product","fetch","then","res","json","type","placeholder","onKeyPress","key","preventDefault","filter","prod","includes","map","schema","yup","shape","title","min","max","required","image","tags","Header","dateStr","date","Date","getMonth","getDate","getFullYear","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","App","fallback","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0599dbcf.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Post.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { faShekelSign ,faSearchLocation} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Post.css';\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            description:\"\"\n        }\n    }\n\n\n    clickHandler = (e) => {\n        console.log(e.target.value);\n        if(e.target.value !==\"\"){\n            this.setState({description : e.target.value})\n        }\n        prompt(\"you can edit the description\", `${this.props.description}`);\n\n    }\n    // componentDidMount() {\n    //     fetch('https://sheet.best/api/sheets/96061e86-6f26-4ace-8da1-8eeded76a659', {\n    //         method: 'PATCH',\n    //         mode: 'cors',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify({\n    //             Amp: `this.props.description`,\n    //         }),\n    //     })\n    //         .then(r => r.json())\n    //         .then(data => {\n    //             // The response comes here\n    //             console.log(data);\n    //         })\n    //         .catch(error => {\n    //             // Errors are reported there\n    //             console.log(error);\n    //         });\n    // }\n\n\n    render() {\n        const cls = (this.props.QTY > 0) ? 'qty' : 'hide';\n        const qty = (this.props.QTY > 0) ? 'card-text' : 'hide';\n        // const img = (this.props.thumbnailUrl.length > -1) ? 'pic' : 'hide';\n        const cls2 = (this.props.stock5 > 0) ? 'qty2' : 'hide';\n        const bgClass = (this.props.stock5 > 0 || this.props.QTY > 0) ? 'bg' : 'card-text';\n\n\n        return (\n                <div >\n                    <div className=\"card \" >\n                        <div>{this.props.index}</div>\n                        <span>\n                            <img src={this.props.thumbnailUrl}  className=\"pic\" alt=\"...\"\n                                 onClick={()=> window.open(this.props.thumbnailUrl,\n                                     \"_blank\" ,\n                                     'height=600,width=400')}/>\n                            <img src={this.props.thumbnailUrl2}  className=\"pic\" alt=\"...\"\n                                 onClick={()=> window.open(this.props.thumbnailUrl2,\n                                     \"_blank\" ,\n                                     'height=600,width=400')}/>\n                        </span>\n                        <div className=\"card-body\">\n                            <h5 className={ bgClass} >{this.props.num}</h5><br/>\n                            <span className=\"card-text\">{this.props.OEM}</span><br/>\n                            <span className=\"card-text\">{this.props.make} </span>\n                            <p className=\"card-text\">{this.props.engine} </p>\n                            <p className=\"card-text\" dir=\"rtl\">\n                                {/*<button onClick={this.clickHandler.bind(this)}>edit</button>*/}\n                               {this.props.description} {this.state.description}\n                            </p>\n                            <p className=\"card-text\" dir=\"rtl\">{this.props.desOK}</p><hr/>\n                            <p className= {cls}  >{this.props.QTY}   :  כמות במלאי</p>\n                            <p className={cls2} >{this.props.stock5}  : במלאי מחסן אור- עקיבא  </p>\n                            <p className={cls2} dir=\"rtl\">{this.props.locationOK} : מיקום </p>\n                            {/*<p className=\"card-text\">{this.props.R} {this.props.N}</p>*/}\n                            <p className=\"card-text\"><FontAwesomeIcon icon={faShekelSign} style={{color:\"blue\"}}/>  {this.props.price} : מחיר ברוטו  לא כולל מעמ </p>\n                            <p className={qty} dir=\"rtl\">\n                                <FontAwesomeIcon icon={faSearchLocation} style={{color:\"blue\"}}/>\n                                     {this.props.FirstFloor} כמות- {this.props.stock1} <br/> {this.props.secFloor}   כמות-{this.props.stock2}</p>\n                            {/*<a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>*/}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default Post;","import React, {Component, Suspense} from 'react';\nimport Post from \"./Post/Post\";\nimport {debounce} from 'lodash';\n\n\nclass CallApi extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            product:[],\n            search :\"\",\n        }\n\n    }\n\n    componentDidMount () {\n        fetch( 'https://sheet.best/api/sheets/96061e86-6f26-4ace-8da1-8eeded76a659' )\n            .then(res => res.json())\n            .then(product => {\n                this.setState({product});\n                console.log(product);\n            })\n\n    }\n    onDebounce = debounce((e) => this.clickHandler(e) , 300);\n\n     clickHandler = (e) => {\n        if(e.target.value !==\"\"){\n            this.setState({search : e.target.value.toUpperCase()})\n        }\n     }\n\n     onChange = (e) => {\n         e.persist();\n         this.onDebounce(e);\n     }\n    // search2Handler (e){\n    //     if(e.target.value !==\"\"){\n    //         this.setState({search2 : e.target.value.toUpperCase()})\n    //     }\n    //\n    // }\n    // resetButton (){\n    //     this.setState({search:''})\n    // }\n\nrender() {\n\n        return (\n\n            <div>\n\n                <div className=\"container\">\n                    <form  className=\"form-inline my-2 my-lg-0\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\"\n                               placeholder=\"Search .... \"\n                               onChange={this.onChange}\n                               onKeyPress={(e)=>{e.key === 'Enter'&& e.preventDefault()}}/>\n\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">איפוס</button>\n                        {/*<button onClick={this.state.product.filter(prod => ((prod.QTY || prod.stock5) >=  0))}>Inventory Only</button>*/}\n                    </form>\n                    <div className=\"card-deck\">\n                        {this.state.product\n                            // .filter(prod => ((prod.QTY || prod.stock5) >  0))\n                            .filter(prod => (prod.num.includes(this.state.search)\n                                || prod.description.includes(this.state.search) || prod.OEM.includes(this.state.search)))\n                            .map(product => {\n                                return <Post\n                                    {...product}\n\n                                />\n                            })}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CallApi;\n\n","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n\ttitle: yup.string().min(2).max(255).required(),\n\timage: yup.mixed().required(),\n\ttags: yup.string()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport { Router, Route, Switch } from \"react-router\";\n\nimport CreatePost from \"../../CreatePost/CreatePost\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    formatDate(dateStr) {\n        const date = new Date(dateStr);\n        const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        return months[date.getMonth()] + ' ' + date.getDate()+ ' '+ date.getFullYear();\n    };\n\n    render() {\n        return (\n\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">DS inventory</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\">Parts <span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\">Link</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\"\n                                   aria-disabled=\"true\">Disabled</a>\n                            </li>\n                        </ul>\n\n\n                    </div>\n                </nav>\n\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport postModel from '../models/post.model';\nimport './CreatePost.scss';\nimport { faCloudUploadAlt, faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TagsInput from 'react-tagsinput';\n\nclass CreatePost extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttags: []\n\t\t};\n\t}\n\n\thandleTagsChange(tags) {\n\t\tthis.setState({\n\t\t\ttags: tags\n\t\t});\n\t}\n\n\tconvertToFormData(values) {\n\t\tconst data = new FormData();\n\t\tfor (let key in values) {\n\t\t\tArray.isArray(values[key])\n\t\t\t\t? values[key].forEach(value => data.append(key + '[]', value))\n\t\t\t\t: data.append(key, values[key]) ;\n\t\t}\n\t\treturn data;\n\t}\n\n\tsubmit(values) {\n\t\tconst formData = this.convertToFormData(values);\n\t\tfetch('./db.json', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(post => console.log(post))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CreatePost\">\n\t\t\t\t<h2>Create Post</h2>\n\t\t\t\t<Formik initialValues={{image: '', title: '', tags: []}}\n\t\t\t\t        validationSchema={postModel}\n\t\t\t\t        onSubmit={this.submit.bind(this)}\n\t\t\t\t\t\trender={({setFieldValue}) => {\n\t\t\t\t\t\t\treturn <Form className=\"col-xs-12 col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"image\" id=\"image\" onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('image', event.currentTarget.files[0]);\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"image\" className=\"upload-button\">\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCloudUploadAlt} />\n\t\t\t\t\t\t\t\t\t\t\tSelect an image\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"container-fluid row\">\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Title:</label>\n\n\n\t\t\t\t\t\t\t\t\t<Field as=\"textarea\" name=\"title\" className=\"form-control\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"title\" component=\"div\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Tags:</label>\n\t\t\t\t\t\t\t\t\t<TagsInput value={this.state.tags}\n\t\t\t\t\t\t\t\t\t           onChange={(tags) => {\n\t\t\t\t\t\t\t\t\t               this.handleTagsChange(tags);\n\t\t\t\t\t\t\t\t\t\t           setFieldValue('tags', tags);\n\t\t\t\t\t\t\t\t\t           }}\n\t\t\t\t\t\t\t\t\t           className=\"tags-wrapper\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"tags\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t<div><sub>Press Enter after inserting a tag</sub></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faShare} />&nbsp;\n\t\t\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>;\n\t\t\t\t\t\t}}>\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreatePost;","import React, {Component} from 'react';\n\nclass Parts extends Component {\n    render() {\n        return (\n            <div>\n                <div>Welcome</div>\n            </div>\n        );\n    }\n}\n\nexport default Parts;","import React, {Suspense} from 'react';\nimport { Router, Route, Switch } from \"react-router\";\nimport './App.css';\nimport CallApi from \"./CallApi/CallApi\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./CallApi/Header/Header\";\nimport Parts from \"./Parts/Parts\";\n\n\n\n\nfunction App() {\n  return (\n\n\n        <div className=\"App\">\n\n\n            <Header/>\n            {/*<Route path=\"/parts\">*/}\n            {/*    <Parts/>*/}\n            {/*</Route>*/}\n            <Suspense fallback={<h1>Loadding ...</h1>}>\n\n                <CallApi/>\n            </Suspense>\n        </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}