{"version":3,"sources":["CallApi/Post/Post.js","CallApi/CallApi.js","models/post.model.js","CallApi/Header/Header.js","CreatePost/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["Post","cls","this","props","QTY","cls2","stock5","className","id","src","thumbnailUrl","alt","thumbnailUrl2","num","OEM","make","engine","dir","description","R","N","icon","faShekelSign","style","color","price","faSearchLocation","FirstFloor","stock1","secFloor","stock2","Component","CallApi","state","product","search","search2","fetch","then","res","json","setState","console","log","e","target","value","toUpperCase","type","placeholder","onChange","clickHandler","bind","onKeyPress","key","preventDefault","filter","prod","includes","map","schema","yup","shape","title","min","max","required","image","tags","Header","dateStr","date","Date","getMonth","getDate","getFullYear","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8309354a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Post.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { faShekelSign ,faSearchLocation} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Post.css';\n\nclass Post extends Component {\n    render() {\n        const cls = (this.props.QTY > 0) ? 'qty' : '';\n        const cls2 = (this.props.stock5 > 0) ? 'qty' : '';\n\n\n        return (\n                <div >\n                    <div className=\"card \" >\n                        <div>{this.props.id}</div>\n                        <span>\n                            <img src={this.props.thumbnailUrl}  className=\"pic\" alt=\"...\"/>\n                            <img src={this.props.thumbnailUrl2}  className=\"pic\" alt=\"...\"/>\n                        </span>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{this.props.num}</h5>\n                            <p className=\"card-text\">{this.props.OEM}</p>\n                            <p className=\"card-text\">{this.props.make}: דגם </p>\n                            <p className=\"card-text\">Engine Code :{this.props.engine} </p>\n                            <p className=\"card-text\" dir=\"rtl\">{this.props.description}</p>\n                            <p className= {cls}  >{this.props.QTY}   :  כמות במלאי</p>\n                            <p className={cls2} >{this.props.stock5}  : במלאי מחסן 5 </p>\n                            {/*<p className=\"card-text\">{this.props.Amp}Amp </p>*/}\n                            <p className=\"card-text\">{this.props.R} {this.props.N}</p>\n                            <p className=\"card-text\"><FontAwesomeIcon icon={faShekelSign} style={{color:\"blue\"}}/>{this.props.price} : מחיר ברוטו  לא כולל מעמ </p>\n                            <p className=\"card-text\" dir=\"rtl\">\n                                <FontAwesomeIcon icon={faSearchLocation} style={{color:\"blue\"}}/>\n                                {this.props.FirstFloor} כמות- {this.props.stock1} <br/> {this.props.secFloor}   כמות-{this.props.stock2}</p>\n                            {/*<a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>*/}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport Post from \"./Post/Post\";\n\n\nclass CallApi extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            product:[],\n            search :\"\",\n            search2 :\"\"\n        }\n\n    }\n\n    componentDidMount () {\n        fetch( 'https://sheet.best/api/sheets/96061e86-6f26-4ace-8da1-8eeded76a659' )\n            .then(res => res.json())\n            .then(product => {\n                this.setState({product});\n                console.log(product);\n            })\n\n    }\n     clickHandler (e){\n        if(e.target.value !==\"\"){\n            this.setState({search : e.target.value.toUpperCase()})\n        }\n\n     }\n    search2Handler (e){\n        if(e.target.value !==\"\"){\n            this.setState({search2 : e.target.value.toUpperCase()})\n        }\n\n    }\n\n\n\nrender() {\n        return (\n\n            <div>\n\n                <div className=\"container\">\n                    <form  className=\"form-inline my-2 my-lg-0\">\n                        <input className=\"form-control mr-sm-2\" type=\"search\"\n                               placeholder=\"לפי מקט\"\n                               onChange={this.clickHandler.bind(this)}\n                               onKeyPress={(e)=>{e.key === 'Enter'&& e.preventDefault()}}/>\n                        {/*<input className=\"form-control mr-sm-2\" type=\"search\"*/}\n                        {/*       placeholder=\"לפי תאור מוצר\"*/}\n                        {/*       onChange={this.search2Handler.bind(this)}*/}\n                        {/*       onKeyPress={(e)=>{e.key === 'Enter'&& e.preventDefault()}}*/}\n                        {/*/>*/}\n\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">איפוס</button>\n                    </form>\n                    <div className=\"card-deck\">\n                        {this.state.product\n                            .filter(prod => (prod.num.includes(this.state.search) || prod.description.includes(this.state.search)))\n                            .map(product => {\n                                return <Post\n                                    {...product}\n\n                                />\n                            })}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CallApi;\n\n","import * as yup from 'yup';\n\nlet schema = yup.object().shape({\n\ttitle: yup.string().min(2).max(255).required(),\n\timage: yup.mixed().required(),\n\ttags: yup.string()\n});\n\nexport default schema;","import React, {Component} from 'react';\nimport CreatePost from \"../../CreatePost/CreatePost\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n    formatDate(dateStr) {\n        const date = new Date(dateStr);\n        const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n        return months[date.getMonth()] + ' ' + date.getDate()+ ' '+ date.getFullYear();\n    };\n\n    render() {\n        return (\n\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">DS inventory</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    {/*<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">*/}\n                    {/*    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">*/}\n                    {/*        <li className=\"nav-item active\">*/}\n                    {/*            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>*/}\n                    {/*        </li>*/}\n                    {/*        <li className=\"nav-item\">*/}\n                    {/*            <a className=\"nav-link\" href=\"#\">Link</a>*/}\n                    {/*        </li>*/}\n                    {/*        <li className=\"nav-item\">*/}\n                    {/*            <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\"*/}\n                    {/*               aria-disabled=\"true\">Disabled</a>*/}\n                    {/*        </li>*/}\n                    {/*    </ul>*/}\n\n                    {/*</div>*/}\n                </nav>\n\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport postModel from '../models/post.model';\nimport './CreatePost.scss';\nimport { faCloudUploadAlt, faShare } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TagsInput from 'react-tagsinput';\n\nclass CreatePost extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttags: []\n\t\t};\n\t}\n\n\thandleTagsChange(tags) {\n\t\tthis.setState({\n\t\t\ttags: tags\n\t\t});\n\t}\n\n\tconvertToFormData(values) {\n\t\tconst data = new FormData();\n\t\tfor (let key in values) {\n\t\t\tArray.isArray(values[key])\n\t\t\t\t? values[key].forEach(value => data.append(key + '[]', value))\n\t\t\t\t: data.append(key, values[key]) ;\n\t\t}\n\t\treturn data;\n\t}\n\n\tsubmit(values) {\n\t\tconst formData = this.convertToFormData(values);\n\t\tfetch('./db.json', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(post => console.log(post))\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CreatePost\">\n\t\t\t\t<h2>Create Post</h2>\n\t\t\t\t<Formik initialValues={{image: '', title: '', tags: []}}\n\t\t\t\t        validationSchema={postModel}\n\t\t\t\t        onSubmit={this.submit.bind(this)}\n\t\t\t\t\t\trender={({setFieldValue}) => {\n\t\t\t\t\t\t\treturn <Form className=\"col-xs-12 col-md-6\">\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"image\" id=\"image\" onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue('image', event.currentTarget.files[0]);\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"image\" className=\"upload-button\">\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCloudUploadAlt} />\n\t\t\t\t\t\t\t\t\t\t\tSelect an image\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<div className=\"container-fluid row\">\n\t\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"image\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Title:</label>\n\n\n\t\t\t\t\t\t\t\t\t<Field as=\"textarea\" name=\"title\" className=\"form-control\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"title\" component=\"div\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group\">\n\t\t\t\t\t\t\t\t\t<label>Tags:</label>\n\t\t\t\t\t\t\t\t\t<TagsInput value={this.state.tags}\n\t\t\t\t\t\t\t\t\t           onChange={(tags) => {\n\t\t\t\t\t\t\t\t\t               this.handleTagsChange(tags);\n\t\t\t\t\t\t\t\t\t\t           setFieldValue('tags', tags);\n\t\t\t\t\t\t\t\t\t           }}\n\t\t\t\t\t\t\t\t\t           className=\"tags-wrapper\" />\n\t\t\t\t\t\t\t\t\t<ErrorMessage className=\"alert alert-danger mt-2\" name=\"tags\" component=\"div\" />\n\t\t\t\t\t\t\t\t\t<div><sub>Press Enter after inserting a tag</sub></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"row form-group d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faShare} />&nbsp;\n\t\t\t\t\t\t\t\t\t\tShare\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Form>;\n\t\t\t\t\t\t}}>\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CreatePost;","import React , {Suspense}from 'react';\nimport './App.css';\nimport CallApi from \"./CallApi/CallApi\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./CallApi/Header/Header\";\n\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n\n\n        <Header/>\n        <Suspense fallback={<h1>Loadding ...</h1>}>\n\n            <CallApi/>\n        </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}